{"version":3,"sources":["eventdetailed/EventDetailedChat.jsx","eventdetailed/EventDetailedHeader.jsx","eventdetailed/EventDetailedInfo.jsx","eventdetailed/EventDetailedSideBar.jsx","eventdetailed/EventDetailed.jsx","events/event.Constants.js","eventform/EventForm.jsx","events/eventActions.js","events/EventListAttendee.jsx","events/EventsListItem.jsx","events/EventList.jsx","events/EventsDashboard.jsx","home/Home.jsx","nav/Navbar.jsx","App.js","reportWebVitals.js","ScrollToTop.jsx","events/eventReducer.js","api/sampleData.js","store/rootReducer.js","index.js","store/Configure.js"],"names":["EventDetailedChat","Segment","textAlign","attached","inverted","color","style","border","Header","Comment","Group","Avatar","src","Content","Author","as","Metadata","Text","Actions","Action","Form","reply","TextArea","Button","content","labelPosition","icon","primary","eventImageStyle","filter","eventImageTextStyle","position","bottom","left","width","height","EventDetailedHeader","event","basic","padding","Image","category","fluid","Item","size","title","date","hostedBy","Link","to","id","floated","EventDetailedInfo","Grid","Column","Icon","name","description","verticalAlign","venue","EventDetailedSideBar","attendee","secondary","length","relaxed","divided","map","attende","photoURL","EventDetailed","match","useSelector","state","events","find","e","params","attendees","CREATE_EVENT","UPDATE_EVENT","DELETE_EVENT","EventForm","history","dispatch","useDispatch","selectedEvent","initialValues","city","useState","values","setValues","handleInputChange","target","value","clearing","onSubmit","type","payload","createEvent","cuid","hostPhotoURL","push","Field","placeholder","onChange","positive","EventListAttendee","List","circular","EventsListItem","Description","horizontal","onClick","eventId","EventList","EventsDashboard","Home","vertical","className","Container","Navbar","Menu","fixed","header","NavLink","App","key","useLocation","exact","path","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","useEffect","window","scrollTo","initialState","rootReducer","combineReducers","evt","store","createStore","devToolsEnhancer","rootEl","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.db224fe5.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Button, Comment, Form, Header, Segment } from 'semantic-ui-react'\r\n\r\nconst EventDetailedChat = () => {\r\n    return (\r\n        <>\r\n         <Segment\r\n    textAlign=\"center\"\r\n    attached=\"top\"\r\n    inverted\r\n    color=\"teal\"\r\n    style={{border: 'none'}}\r\n>\r\n    <Header>Chat about this event</Header>\r\n</Segment>\r\n\r\n<Segment attached>\r\n    <Comment.Group>\r\n        <Comment>\r\n            <Comment.Avatar src=\"/assets/user.png\"/>\r\n            <Comment.Content>\r\n                <Comment.Author as=\"a\">Matt</Comment.Author>\r\n                <Comment.Metadata>\r\n                    <div>Today at 5:42PM</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text>How artistic!</Comment.Text>\r\n                <Comment.Actions>\r\n                    <Comment.Action>Reply</Comment.Action>\r\n                </Comment.Actions>\r\n            </Comment.Content>\r\n        </Comment>\r\n\r\n        <Comment>\r\n            <Comment.Avatar src=\"/assets/user.png\"/>\r\n            <Comment.Content>\r\n                <Comment.Author as=\"a\">Elliot Fu</Comment.Author>\r\n                <Comment.Metadata>\r\n                    <div>Yesterday at 12:30AM</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text>\r\n                    <p>\r\n                        This has been very useful for my research. Thanks as well!\r\n                    </p>\r\n                </Comment.Text>\r\n                <Comment.Actions>\r\n                    <Comment.Action>Reply</Comment.Action>\r\n                </Comment.Actions>\r\n            </Comment.Content>\r\n            <Comment.Group>\r\n                <Comment>\r\n                    <Comment.Avatar src=\"/assets/user.png\"/>\r\n                    <Comment.Content>\r\n                        <Comment.Author as=\"a\">Jenny Hess</Comment.Author>\r\n                        <Comment.Metadata>\r\n                            <div>Just now</div>\r\n                        </Comment.Metadata>\r\n                        <Comment.Text>Elliot you are always so right :)</Comment.Text>\r\n                        <Comment.Actions>\r\n                            <Comment.Action>Reply</Comment.Action>\r\n                        </Comment.Actions>\r\n                    </Comment.Content>\r\n                </Comment>\r\n            </Comment.Group>\r\n        </Comment>\r\n\r\n        <Comment>\r\n            <Comment.Avatar src=\"/assets/user.png\"/>\r\n            <Comment.Content>\r\n                <Comment.Author as=\"a\">Joe Henderson</Comment.Author>\r\n                <Comment.Metadata>\r\n                    <div>5 days ago</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text>Dude, this is awesome. Thanks so much</Comment.Text>\r\n                <Comment.Actions>\r\n                    <Comment.Action>Reply</Comment.Action>\r\n                </Comment.Actions>\r\n            </Comment.Content>\r\n        </Comment>\r\n\r\n        <Form reply>\r\n            <Form.TextArea/>\r\n            <Button \r\n                content=\"Add Reply\"\r\n                labelPosition=\"left\"\r\n                icon=\"edit\"\r\n                primary\r\n            />\r\n        </Form>\r\n    </Comment.Group>\r\n</Segment>\r\n</>\r\n   \r\n        \r\n    );\r\n    }\r\n\r\nexport default EventDetailedChat;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Segment , Image, Item, Header, Button } from 'semantic-ui-react'\r\n\r\n\r\nconst eventImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst eventImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\nconst EventDetailedHeader = ({event}) => {\r\n   \r\n    return (\r\n        \r\n            <Segment.Group>\r\n    <Segment basic attached=\"top\" style={{padding: '0'}}>\r\n        <Image src={`/assets/categoryImages/${event.category}.jpg`} fluid style={eventImageStyle} />\r\n\r\n        <Segment basic style={eventImageTextStyle}  >\r\n            <Item.Group>\r\n                <Item>\r\n                    <Item.Content>\r\n                        <Header\r\n                            size=\"huge\"\r\n                            content={event.title}\r\n                            style={{color: 'white'}}\r\n                        />\r\n                        <p>{event.date}</p>\r\n                        <p>\r\n                            Hosted by <strong>{event.hostedBy}</strong>\r\n                        </p>\r\n                    </Item.Content>\r\n                </Item>\r\n            </Item.Group>\r\n        </Segment>\r\n    </Segment>\r\n\r\n    <Segment attached=\"bottom\">\r\n        <Button>Cancel My Place</Button>\r\n        <Button color=\"teal\">JOIN THIS EVENT</Button>\r\n\r\n        <Button as={Link} to={`/manage/${event.id}`}  color=\"orange\" floated=\"right\">\r\n            Manage Event\r\n        </Button>\r\n    </Segment>\r\n</Segment.Group>\r\n       \r\n    )\r\n}\r\n\r\nexport default EventDetailedHeader\r\n","import React from 'react'\r\nimport { Button, Grid, Icon, Segment } from 'semantic-ui-react'\r\n\r\nconst EventDetailedInfo = ({event}) => {\r\n    return (\r\n        <>\r\n            <Segment.Group>\r\n    <Segment attached=\"top\">\r\n        <Grid>\r\n            <Grid.Column width={1}>\r\n                <Icon size=\"large\" color=\"teal\" name=\"info\"/>\r\n            </Grid.Column>\r\n            <Grid.Column width={15}>\r\n                <p>{event.description } </p>\r\n            </Grid.Column>\r\n        </Grid>\r\n    </Segment>\r\n    <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n            <Grid.Column width={1}>\r\n                <Icon name=\"calendar\" size=\"large\" color=\"teal\"/>\r\n            </Grid.Column>\r\n            <Grid.Column width={15}>\r\n                <span>{event.date}</span>\r\n            </Grid.Column>\r\n        </Grid>\r\n    </Segment>\r\n    <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n            <Grid.Column width={1}>\r\n                <Icon name=\"marker\" size=\"large\" color=\"teal\"/>\r\n            </Grid.Column>\r\n            <Grid.Column width={11}>\r\n                <span>{event.venue}</span>\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n                <Button color=\"teal\" size=\"tiny\" content=\"Show Map\"/>\r\n            </Grid.Column>\r\n        </Grid>\r\n    </Segment>\r\n</Segment.Group>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EventDetailedInfo\r\n","import React from 'react'\r\nimport { Item, Segment } from 'semantic-ui-react'\r\n\r\nconst EventDetailedSideBar = ({attendee}) => {\r\n    return (\r\n        <>\r\n    \r\n<Segment\r\n    textAlign=\"center\"\r\n    style={{border: 'none'}}\r\n    attached=\"top\"\r\n    secondary\r\n    inverted\r\n    color=\"teal\"\r\n>\r\n  {attendee.length} {attendee.length > 1 ?  'People' : 'Person'} Going\r\n</Segment>\r\n<Segment attached>\r\n    <Item.Group relaxed divided>\r\n    {attendee.map(attende => ( \r\n        <Item key={attende.id} style={{position: 'relative'}}>\r\n            <Item.Image size=\"tiny\" src={ attende.photoURL || '/assets/user.png'}/>\r\n            <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                    <span>{attende.name}</span>\r\n                </Item.Header>\r\n            </Item.Content>\r\n        </Item>))}\r\n     \r\n    </Item.Group>\r\n</Segment>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EventDetailedSideBar\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport EventDetailedChat from './EventDetailedChat'\r\nimport EventDetailedHeader from './EventDetailedHeader'\r\nimport EventDetailedInfo from './EventDetailedInfo'\r\nimport EventDetailedSideBar from './EventDetailedSideBar'\r\n\r\nconst EventDetailed = ({match}) => {\r\n\r\n    const event = useSelector(state => state.event.events.find(e => e.id === match.params.id));\r\n\r\n    return (\r\n        \r\n            <Grid>\r\n                <Grid.Column width={10} >\r\n                    <EventDetailedHeader event={event} />\r\n                    <EventDetailedInfo event={event} />\r\n                    <EventDetailedChat />\r\n\r\n                </Grid.Column>\r\n\r\n                <Grid.Column width={6} >\r\n                        <EventDetailedSideBar attendee={event.attendees}  />\r\n                </Grid.Column>\r\n            </Grid>\r\n        \r\n    )\r\n}\r\n\r\nexport default EventDetailed","export const CREATE_EVENT = 'CREATE_EVENT';\r\nexport const UPDATE_EVENT = 'UPDATE_EVENT';\r\nexport const DELETE_EVENT = 'DELETE_EVENT';\r\n","\r\nimport cuid from 'cuid';\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Form, Header, Segment } from 'semantic-ui-react'\r\nimport { createEvent, updateEvent } from '../events/eventActions';\r\n\r\nconst EventForm = ({ match , history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const selectedEvent = useSelector(state => state.event.events.find(e => e.id === match.params.id));\r\n\r\n    const initialValues = selectedEvent ?? {\r\n        title: '',\r\n        category: '',\r\n        description: '',\r\n        city: '',\r\n        venue: '',\r\n        date: ''\r\n    }\r\n\r\n    const [ values ,setValues] = useState(initialValues);\r\n\r\n    function handleFormSubmit() {\r\n\r\n        selectedEvent ? dispatch(updateEvent({...selectedEvent , ...values}))\r\n        :\r\n       dispatch(  createEvent({...values , id: cuid(), hostedBy: 'Bob', attendees: [] , hostPhotoURL: '/assets/user.png'}));\r\n        history.push('/events')\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setValues({ ...values, [name]: value }); \r\n    }\r\n\r\n    return (\r\n        <Segment clearing >\r\n            <Header content={ selectedEvent ?  'Edit the event'  : 'Create new event'} />\r\n            <Form onSubmit={handleFormSubmit} >\r\n                <Form.Field>\r\n                    <input type=\"text\" placeholder='Event title' \r\n                    name='title' \r\n                    value={values.title} onChange={(e) =>  handleInputChange(e) }\r\n                     />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <input type=\"text\" placeholder='Category'\r\n                     name='category' \r\n                     value={values.category} onChange={(e) => handleInputChange(e)}\r\n                    />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <input type=\"text\" placeholder='Description'\r\n                     name='description' \r\n                     value={values.description} onChange={(e) => handleInputChange(e)}\r\n                    />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <input type=\"text\" placeholder='city'\r\n                     name='city' \r\n                     value={values.city} onChange={(e) => handleInputChange(e)}\r\n                    />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <input type=\"text\" placeholder='Venue'\r\n                     name='venue' \r\n                     value={values.venue} onChange={(e) => handleInputChange(e)}\r\n                    />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <input type=\"date\" placeholder='Date' \r\n                     name='date' \r\n                     value={values.date} onChange={(e) => handleInputChange(e)}\r\n                    />\r\n                </Form.Field>\r\n                <Button type='submit' floated='right' positive content='Submit' />\r\n                <Button  as={Link} to='/events' type='submit' floated='right' content='Cancel' />\r\n            </Form>\r\n        </Segment>\r\n    )\r\n}\r\n\r\nexport default EventForm;\r\n","import { CREATE_EVENT, DELETE_EVENT, UPDATE_EVENT } from \"./event.Constants\";\r\n\r\nexport function createEvent(event) {\r\n    return {\r\n        type: CREATE_EVENT,\r\n        payload: event\r\n    }\r\n}\r\n\r\nexport function updateEvent(event) {\r\n    return {\r\n        type: UPDATE_EVENT,\r\n        payload: event\r\n    }\r\n}\r\n\r\nexport function deleteEvent(eventId) {\r\n    return {\r\n        type: DELETE_EVENT,\r\n        payload: eventId\r\n    }\r\n}","import React from 'react'\r\nimport { List ,Image } from 'semantic-ui-react'\r\n\r\nconst EventListAttendee = ({attendee}) => {\r\n    return (\r\n        <List.Item>\r\n            <Image size='mini' circular src={attendee.photoURL} />\r\n        </List.Item>\r\n    )\r\n}\r\n\r\nexport default EventListAttendee\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Icon, Item, List, Segment } from 'semantic-ui-react'\r\nimport { deleteEvent } from './eventActions'\r\nimport EventListAttendee from './EventListAttendee'\r\n\r\nconst EventsListItem = ({event  }) => {\r\n\r\n    const  dispatch = useDispatch();\r\n\r\n    return (\r\n        <Segment.Group>\r\n            <Segment>\r\n                <Item.Group>\r\n                    <Item>\r\n                        <Item.Image size='tiny' circular src={event.hostPhotoURL} />\r\n                        <Item.Content>\r\n                            <Item.Header content={event.title} />\r\n                            <Item.Description>\r\n                                Hosted by {event.hostedBy}\r\n                            </Item.Description>\r\n                        </Item.Content>\r\n                    </Item>\r\n                </Item.Group>\r\n            </Segment>\r\n            <Segment>\r\n                <span>\r\n                    <Icon name='clock'/> {event.date}\r\n                    <Icon name='marker' /> {event.venue}\r\n                </span>\r\n            </Segment>\r\n            <Segment  >\r\n                <List horizontal>\r\n                    { event.attendees.map(attendee => (\r\n <EventListAttendee key={attendee.id} attendee={attendee} /> \r\n                    )) }\r\n                    \r\n                    \r\n                </List>\r\n            </Segment>\r\n            <Segment clearing>\r\n                <div>{event.description}</div>\r\n                <Button onClick={() => dispatch(deleteEvent(event.id))} color='red' floated='right' content='Delete' />\r\n                <Button as={Link} to={`/events/${event.id}`} color='teal' floated='right' content='View' />\r\n\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n}\r\n\r\nexport default EventsListItem\r\n","import React from 'react'\r\nimport EventsListItem from './EventsListItem'\r\n\r\nconst EventList = ({events  }) => {\r\n    return (\r\n        <>\r\n        { events.map(event => (\r\n <EventsListItem event={event} key={event.id} />\r\n        ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EventList\r\n","\r\nimport { useSelector } from 'react-redux';\r\nimport { Grid } from 'semantic-ui-react'\r\nimport EventList from './EventList'\r\n\r\n\r\nconst EventsDashboard = () => {\r\n\r\n  const {events} = useSelector(state => state.event);\r\n\r\n\r\n  \r\n\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={14} >\r\n                <EventList events={events}   />\r\n            </Grid.Column>\r\n       \r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default EventsDashboard\r\n","import React from 'react';\r\nimport './home.css';\r\nimport { Segment, Container, Header, Image, Button, Icon } from 'semantic-ui-react';\r\n\r\nexport default function Home({history}) {\r\n    return (\r\n        <Segment inverted textAlign='center' vertical className='masthead'>\r\n            <Container>\r\n                <Header as='h1' inverted>\r\n                    Re-vents\r\n                </Header>\r\n                <Button onClick={() => history.push('/events')} size='huge' inverted>\r\n                    Get started\r\n                    <Icon name='right arrow' inverted />\r\n                </Button>\r\n            </Container>\r\n        </Segment>\r\n    )\r\n}","import React from 'react'\r\nimport { NavLink , Link } from 'react-router-dom'\r\nimport { Button, Container, Menu ,Image} from 'semantic-ui-react'\r\n\r\n\r\nconst Navbar = () => {\r\n  \r\n\r\n    return (\r\n        <>\r\n        <Menu inverted fixed='top'>\r\n            <Container>\r\n                <Menu.Item as={Link} to='/' header>\r\n                \r\n                    Re-vents\r\n                </Menu.Item>\r\n                <Menu.Item as={NavLink} to='/events' name='Events' />\r\n     <Menu.Item as={NavLink} to='/createEvent' position='right'  >\r\n                <Button   positive inverted content='Create Event'   />\r\n            </Menu.Item>\r\n         \r\n            </Container>\r\n        </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from \"react\";\nimport { Route, useLocation } from \"react-router-dom\";\nimport { Container } from \"semantic-ui-react\";\nimport \"./App.css\";\nimport EventDetailed from \"./eventdetailed/EventDetailed\";\nimport EventForm from \"./eventform/EventForm\";\nimport EventsDashboard from \"./events/EventsDashboard\";\nimport Home from \"./home/Home\";\nimport Navbar from \"./nav/Navbar\";\n\nfunction App() {\n\n const {key} = useLocation();\n\n  \n  return (\n    <>\n      <Route exact path=\"/\" component={Home} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <>\n            <Navbar />\n            <Container className=\"main\">\n              <Route exact path=\"/events\" component={EventsDashboard} />\n              <Route path=\"/events/:id\" component={EventDetailed} />\n              <Route path={['/createEvent' , '/manage/:id']} component={EventForm} key={key} />\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst ScrollToTop = () => {\r\n\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0,0);\r\n    }, [pathname]);\r\n\r\n    return null;\r\n}\r\n\r\nexport default ScrollToTop\r\n","import { sampleData } from \"../api/sampleData\";\r\nimport { CREATE_EVENT, DELETE_EVENT, UPDATE_EVENT } from \"./event.Constants\";\r\n\r\nconst initialState = {\r\n    events: sampleData\r\n}\r\n\r\nexport default function eventReducer (state = initialState , {type , payload}) {\r\n    switch(type) {\r\n        case CREATE_EVENT:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, payload]\r\n            };\r\n        case UPDATE_EVENT:\r\n            return {\r\n                ...state,\r\n                events: [...state.events.filter(evt => evt.id !== payload.id),payload]\r\n            }\r\n        case DELETE_EVENT:\r\n                return {\r\n                    ...state,\r\n                    events: [...state.events.filter((evt) => evt.id !== payload)],\r\n                }\r\n                default: \r\n                return state;\r\n    }\r\n}","export const sampleData = [\r\n    {\r\n        id: '1',\r\n        title: 'Trip to Empire State building',\r\n        date: '2018-03-21',\r\n        category: 'culture',\r\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus sollicitudin ligula eu leo tincidunt, quis scelerisque magna dapibus. Sed eget ipsum vel arcu vehicula ullamcorper.',\r\n        city: 'NY, USA',\r\n        venue: 'Empire State Building, 5th Avenue, New York, NY, USA',\r\n        hostedBy: 'Bob',\r\n        hostPhotoURL: 'https://randomuser.me/api/portraits/men/20.jpg',\r\n        attendees: [\r\n            {\r\n                id: 'a',\r\n                name: 'Bob',\r\n                photoURL: 'https://randomuser.me/api/portraits/men/20.jpg'\r\n            },\r\n            {\r\n                id: 'b',\r\n                name: 'Tom',\r\n                photoURL: 'https://randomuser.me/api/portraits/men/22.jpg'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: '2',\r\n        title: 'Trip to Punch and Judy Pub',\r\n        date: '2018-03-18',\r\n        category: 'drinks',\r\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus sollicitudin ligula eu leo tincidunt, quis scelerisque magna dapibus. Sed eget ipsum vel arcu vehicula ullamcorper.',\r\n        city: 'London, UK',\r\n        venue: 'Punch & Judy, Henrietta Street, London, UK',\r\n        hostedBy: 'Tom',\r\n        hostPhotoURL: 'https://randomuser.me/api/portraits/men/22.jpg',\r\n        attendees: [\r\n            {\r\n                id: 'a',\r\n                name: 'Bob',\r\n                photoURL: 'https://randomuser.me/api/portraits/men/20.jpg'\r\n            },\r\n            {\r\n                id: 'b',\r\n                name: 'Tom',\r\n                photoURL: 'https://randomuser.me/api/portraits/men/22.jpg'\r\n            }\r\n        ]\r\n    }\r\n];\r\n","import { combineReducers } from \"redux\";\r\nimport eventReducer from \"../events/eventReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n\r\n    event: eventReducer\r\n})\r\n\r\nexport default rootReducer;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ScrollToTop from './ScrollToTop';\nimport { configureStore } from './store/Configure';\n\nconst store = configureStore()\n\nconst rootEl = document.getElementById('root');\n\nfunction render(){\n\nReactDOM.render(\n  <Provider store={store} >\n\n<BrowserRouter>\n<ScrollToTop/>\n<App />\n</BrowserRouter>\n  </Provider>\n\n\n,rootEl)}\n\nif(module.hot) {\n  module.hot.accept('./App',function(){\n    setTimeout(render);\n  })\n}\nrender();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {createStore} from 'redux';\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\nimport rootReducer from './rootReducer';\r\n\r\n\r\n\r\nexport function configureStore() {\r\n    return createStore(rootReducer, devToolsEnhancer())\r\n}"],"sourceRoot":""}